[gd_scene load_steps=11 format=2]

[ext_resource path="res://resources/tiles/floor.tres" type="TileSet" id=1]
[ext_resource path="res://assets/EditorCam.gd" type="Script" id=3]
[ext_resource path="res://scenes/Editor.gd" type="Script" id=4]
[ext_resource path="res://scenes/TileSelector.gd" type="Script" id=5]
[ext_resource path="res://resources/tiles/entities.tres" type="TileSet" id=6]
[ext_resource path="res://resources/tiles/wall.tres" type="TileSet" id=7]

[sub_resource type="GDScript" id=2]
script/source = "extends ItemList

var ground: TileSet = preload(\"res://resources/tiles/floor.tres\")

func _ready() -> void:
	for id in ground.get_tiles_ids():
		var tile_name = ground.tile_get_name(id)
		if tile_name.find(\"_\") == -1:
			var tile_texture = ground.tile_get_texture(id)
			add_item(ground.tile_get_name(id).capitalize(), tile_texture)

func _process(_delta: float) -> void:
	if Input.is_action_just_pressed(\"ui_cancel\"):
		get_tree().quit()

"

[sub_resource type="GDScript" id=3]
script/source = "extends ItemList

var ground: TileSet = preload(\"res://resources/tiles/floor.tres\")
var tile_variant
onready var terrains : Array = [\"grass\", \"green\", \"water\", \"acid\", \"mud\", \"deepmud\"]

signal grass_selected()

func populate(terrain):
	tile_variant = terrain
	if terrain == 0:
		clear()
		visible = false
		emit_signal(\"grass_selected\", 0)
	else:
		clear()
		visible = true
		for id in ground.get_tiles_ids():
			var search = terrains[terrain] + \"_blend\"
			var tile_name = ground.tile_get_name(id)
			if tile_name.begins_with(search):
				var tile_texture = ground.tile_get_texture(id)
				add_icon_item(tile_texture)
"

[sub_resource type="GDScript" id=4]
script/source = "extends ItemList

var walls = preload(\"res://resources/tiles/wall.tres\")

func _ready() -> void:
	for id in walls.get_tiles_ids():
		var tile_texture = walls.tile_get_texture(id)
		add_icon_item(tile_texture)
"

[sub_resource type="GDScript" id=5]
script/source = "extends ItemList

var entities = preload(\"res://resources/tiles/entities.tres\")

func _ready() -> void:
	for id in entities.get_tiles_ids():
		var tile_texture = entities.tile_get_texture(id)
		add_item(entities.tile_get_name(id).capitalize(), tile_texture)
"

[node name="Editor" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_default_cursor_shape = 3
script = ExtResource( 4 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CanvasLayer" type="CanvasLayer" parent="."]
layer = 2

[node name="TileSelector" type="PanelContainer" parent="CanvasLayer"]
anchor_left = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -280.0
size_flags_horizontal = 3
script = ExtResource( 5 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TabContainer" type="TabContainer" parent="CanvasLayer/TileSelector"]
margin_left = 7.0
margin_top = 7.0
margin_right = 273.0
margin_bottom = 761.0
size_flags_horizontal = 3
use_hidden_tabs_for_min_size = true

[node name="Ground" type="VSplitContainer" parent="CanvasLayer/TileSelector/TabContainer"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 4.0
margin_top = 32.0
margin_right = -4.0
margin_bottom = -4.0
size_flags_horizontal = 3
split_offset = 200

[node name="BaseTile" type="ItemList" parent="CanvasLayer/TileSelector/TabContainer/Ground"]
margin_right = 258.0
margin_bottom = 553.0
size_flags_horizontal = 3
size_flags_vertical = 3
custom_constants/vseparation = 10
custom_constants/hseparation = 10
icon_scale = 2.0
script = SubResource( 2 )

[node name="TileVariant" type="ItemList" parent="CanvasLayer/TileSelector/TabContainer/Ground"]
margin_top = 565.0
margin_right = 258.0
margin_bottom = 718.0
size_flags_horizontal = 3
size_flags_vertical = 3
custom_constants/vseparation = 10
custom_constants/line_separation = 10
custom_constants/icon_margin = 10
custom_constants/hseparation = 10
max_columns = 4
same_column_width = true
icon_scale = 3.0
script = SubResource( 3 )

[node name="Walls" type="ItemList" parent="CanvasLayer/TileSelector/TabContainer"]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 4.0
margin_top = 32.0
margin_right = -4.0
margin_bottom = -4.0
custom_constants/vseparation = 10
custom_constants/line_separation = 10
custom_constants/icon_margin = 10
custom_constants/hseparation = 10
max_columns = 4
same_column_width = true
icon_scale = 3.0
script = SubResource( 4 )

[node name="Entities" type="ItemList" parent="CanvasLayer/TileSelector/TabContainer"]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 4.0
margin_top = 32.0
margin_right = -4.0
margin_bottom = -4.0
max_columns = 4
same_column_width = true
fixed_icon_size = Vector2( 48, 48 )
script = SubResource( 5 )

[node name="Level" type="Control" parent="."]
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Ground" type="TileMap" parent="Level"]
tile_set = ExtResource( 1 )
cell_size = Vector2( 16, 16 )
format = 1

[node name="Walls" type="TileMap" parent="Level"]
tile_set = ExtResource( 7 )
cell_size = Vector2( 16, 16 )
format = 1

[node name="Entities" type="TileMap" parent="Level"]
tile_set = ExtResource( 6 )
cell_size = Vector2( 8, 8 )
format = 1

[node name="Mouse" type="Sprite" parent="."]
self_modulate = Color( 1, 1, 1, 0.501961 )
position = Vector2( 8, 8 )
centered = false
offset = Vector2( -8, -8 )

[node name="Camera2D" type="Camera2D" parent="."]
anchor_mode = 0
current = true
limit_left = 0
limit_top = 0
limit_right = 2048
limit_bottom = 1024
script = ExtResource( 3 )
[connection signal="tile_selected" from="CanvasLayer/TileSelector" to="." method="_on_TileSelector_tile_selected"]
[connection signal="tab_changed" from="CanvasLayer/TileSelector/TabContainer" to="." method="_on_TabContainer_tab_changed"]
[connection signal="item_selected" from="CanvasLayer/TileSelector/TabContainer/Ground/BaseTile" to="CanvasLayer/TileSelector" method="_on_BaseTile_item_selected"]
[connection signal="item_selected" from="CanvasLayer/TileSelector/TabContainer/Ground/BaseTile" to="CanvasLayer/TileSelector/TabContainer/Ground/TileVariant" method="populate"]
[connection signal="item_selected" from="CanvasLayer/TileSelector/TabContainer/Ground/TileVariant" to="CanvasLayer/TileSelector" method="_on_TileVariant_item_selected"]
[connection signal="nothing_selected" from="CanvasLayer/TileSelector/TabContainer/Ground/TileVariant" to="CanvasLayer/TileSelector" method="_on_TileVariant_nothing_selected"]
[connection signal="item_selected" from="CanvasLayer/TileSelector/TabContainer/Walls" to="CanvasLayer/TileSelector" method="_on_Walls_item_selected"]
[connection signal="item_selected" from="CanvasLayer/TileSelector/TabContainer/Entities" to="CanvasLayer/TileSelector" method="_on_Entities_item_selected"]
